resources:
  - name: dummy
    type: PropertyBag
    configuration:
      dummy: dummy
pipelines:
  - name: john_bash_sigterm
    steps:
      - name: cancel_sigterm
        type: Bash
        configuration:
          inputResources:
            - name: dummy
        execution:
          onStart:
            - echo "Setting everything up"
          onExecute:
            - echo "lets loop for a bit"
            - |
                local i=0
                while [[ $i -lt 1000 ]]; do
                  echo "total wait time: $i seconds";
                  sleep 1
                  i=$(($i + 1))
                done
            - echo "waiting complete. moving to success"
          onSuccess:
            - echo "we made it to success"
          onFailure:
            - echo "darn, we failed"
          onComplete:
            - echo "doing some cleanup in the onComplete section"
      - name: timeout_step_sigterm
        type: Bash
        configuration:
          timeoutSeconds: 5
          inputResources:
            - name: dummy
        execution:
          onStart:
            - echo "Setting everything up"
          onExecute:
            - echo "lets loop for a bit"
            - |
                local i=0
                while [[ $i -lt 1000 ]]; do
                  echo "total wait time: $i seconds";
                  sleep 1
                  i=$(($i + 1))
                done
            - echo "waiting complete. moving to success"
          onSuccess:
            - echo "we made it to success"
          onFailure:
            - echo "darn, we failed"
          onComplete:
            - echo "doing some cleanup in the onComplete section"

      - name: slow_failure_step_sigterm
        type: Bash
        configuration:
          timeoutSeconds: 5
          inputResources:
            - name: dummy
        execution:
          onStart:
            - echo "Setting everything up"
          onExecute:
            - echo "lets loop for a bit"
            - |
                local i=0
                while [[ $i -lt 1000 ]]; do
                  echo "total wait time: $i seconds";
                  sleep 1
                  i=$(($i + 1))
                done
            - echo "waiting complete. moving to success"
          onSuccess:
            - echo "we made it to success"
          onFailure:
            - echo "darn, we failed"
            - |
                local i=0
                while [[ $i -lt 1000 ]]; do
                  echo "total wait time: $i seconds";
                  sleep 1
                  i=$(($i + 1))
                done
          onComplete:
            - echo "doing some cleanup in the onComplete section"

      - name: slow_complete_step_sigterm
        type: Bash
        configuration:
          timeoutSeconds: 5
          inputResources:
            - name: dummy
        execution:
          onStart:
            - echo "Setting everything up"
          onExecute:
            - echo "lets loop for a bit"
            - |
                local i=0
                while [[ $i -lt 1000 ]]; do
                  echo "total wait time: $i seconds";
                  sleep 1
                  i=$(($i + 1))
                done
            - echo "waiting complete. moving to success"
          onSuccess:
            - echo "we made it to success"
          onComplete:
            - echo "cleanup time in onComplete"
            - |
                local i=0
                while [[ $i -lt 1000 ]]; do
                  echo "total wait time: $i seconds";
                  sleep 1
                  i=$(($i + 1))
                done
          onFailure:
            - echo "doing some cleanup in the onFailure section"
  - name: john_host_bash_sigterm
    configuration:
      runtime:
        type: host
    steps:
      - name: host_cancel_sigterm
        type: Bash
        configuration:
          inputResources:
            - name: dummy
        execution:
          onStart:
            - echo "Setting everything up"
          onExecute:
            - echo "lets loop for a bit"
            - |
                local i=0
                while [[ $i -lt 1000 ]]; do
                  echo "total wait time: $i seconds";
                  sleep 1
                  i=$(($i + 1))
                done
            - echo "waiting complete. moving to success"
          onSuccess:
            - echo "we made it to success"
          onFailure:
            - echo "darn, we failed"
          onComplete:
            - echo "doing some cleanup in the onComplete section"
      - name: host_timeout_step_sigterm
        type: Bash
        configuration:
          timeoutSeconds: 5
          inputResources:
            - name: dummy
        execution:
          onStart:
            - echo "Setting everything up"
          onExecute:
            - echo "lets loop for a bit"
            - |
                local i=0
                while [[ $i -lt 1000 ]]; do
                  echo "total wait time: $i seconds";
                  sleep 1
                  i=$(($i + 1))
                done
            - echo "waiting complete. moving to success"
          onSuccess:
            - echo "we made it to success"
          onFailure:
            - echo "darn, we failed"
          onComplete:
            - echo "doing some cleanup in the onComplete section"

      - name: host_failure_step_sigterm
        type: Bash
        configuration:
          timeoutSeconds: 5
          inputResources:
            - name: dummy
        execution:
          onStart:
            - echo "Setting everything up"
          onExecute:
            - echo "lets loop for a bit"
            - |
                local i=0
                while [[ $i -lt 1000 ]]; do
                  echo "total wait time: $i seconds";
                  sleep 1
                  i=$(($i + 1))
                done
            - echo "waiting complete. moving to success"
          onSuccess:
            - echo "we made it to success"
          onFailure:
            - echo "darn, we failed"
            - |
                local i=0
                while [[ $i -lt 1000 ]]; do
                  echo "total wait time: $i seconds";
                  sleep 1
                  i=$(($i + 1))
                done
          onComplete:
            - echo "doing some cleanup in the onComplete section"

      - name: host_complete_step_sigterm
        type: Bash
        configuration:
          timeoutSeconds: 5
          inputResources:
            - name: dummy
        execution:
          onStart:
            - echo "Setting everything up"
          onExecute:
            - echo "lets loop for a bit"
            - |
                local i=0
                while [[ $i -lt 1000 ]]; do
                  echo "total wait time: $i seconds";
                  sleep 1
                  i=$(($i + 1))
                done
            - echo "waiting complete. moving to success"
          onSuccess:
            - echo "we made it to success"
          onComplete:
            - echo "cleanup time in onComplete"
            - |
                local i=0
                while [[ $i -lt 1000 ]]; do
                  echo "total wait time: $i seconds";
                  sleep 1
                  i=$(($i + 1))
                done
          onFailure:
            - echo "doing some cleanup in the onFailure section"

  - name: john_win_sigterm
    configuration:
      nodePool: john_win_2019
    steps:
      - name: cancel_sigterm
        type: PowerShell
        configuration:
          inputResources:
            - name: dummy
        execution:
          onStart:
            - echo "Setting everything up"
          onExecute:
            - echo "lets loop for a bit"
            - |
                $i = 0
                while ($i -lt 1000) {
                  echo "total wait time: $i seconds";
                  start-sleep 1
                  $i += 1
                }
            - echo "waiting complete. moving to success"
          onSuccess:
            - echo "we made it to success"
          onFailure:
            - echo "darn, we failed"
          onComplete:
            - echo "doing some cleanup in the onComplete section"
      - name: timeout_step_sigterm
        type: PowerShell
        configuration:
          timeoutSeconds: 5
          inputResources:
            - name: dummy
        execution:
          onStart:
            - echo "Setting everything up"
          onExecute:
            - echo "lets loop for a bit"
            - |
                $i = 0
                while ($i -lt 1000) {
                  echo "total wait time: $i seconds";
                  start-sleep 1
                  $i += 1
                }
            - echo "waiting complete. moving to success"
          onSuccess:
            - echo "we made it to success"
          onFailure:
            - echo "darn, we failed"
          onComplete:
            - echo "doing some cleanup in the onComplete section"

      - name: slow_failure_step_sigterm
        type: PowerShell
        configuration:
          timeoutSeconds: 5
          inputResources:
            - name: dummy
        execution:
          onStart:
            - echo "Setting everything up"
          onExecute:
            - echo "lets loop for a bit"
            - |
                $i = 0
                while ($i -lt 1000) {
                  echo "total wait time: $i seconds";
                  start-sleep 1
                  $i += 1
                }
            - echo "waiting complete. moving to success"
          onSuccess:
            - echo "we made it to success"
          onFailure:
            - echo "darn, we failed"
            - |
                $i = 0
                while ($i -lt 1000) {
                  echo "total wait time: $i seconds";
                  start-sleep 1
                  $i += 1
                }
          onComplete:
            - echo "doing some cleanup in the onComplete section"

      - name: slow_complete_step_sigterm
        type: PowerShell
        configuration:
          timeoutSeconds: 5
          inputResources:
            - name: dummy
        execution:
          onStart:
            - echo "Setting everything up"
          onExecute:
            - echo "lets loop for a bit"
            - |
                $i = 0
                while ($i -lt 1000) {
                  echo "total wait time: $i seconds";
                  start-sleep 1
                  $i += 1
                }
            - echo "waiting complete. moving to success"
          onSuccess:
            - echo "we made it to success"
          onComplete:
            - echo "cleanup time in onComplete"
            - |
                $i = 0
                while ($i -lt 1000) {
                  echo "total wait time: $i seconds";
                  start-sleep 1
                  $i += 1
                }
          onFailure:
            - echo "doing some cleanup in the onFailure section"
  - name: john_win_host_bash_sigterm
    configuration:
      runtime:
        type: host
      nodePool: john_win_2019
    steps:
      - name: host_cancel_sigterm
        type: PowerShell
        configuration:
          inputResources:
            - name: dummy
        execution:
          onStart:
            - echo "Setting everything up"
          onExecute:
            - echo "lets loop for a bit"
            - |
                $i = 0
                while ($i -lt 1000) {
                  echo "total wait time: $i seconds";
                  start-sleep 1
                  $i += 1
                }
            - echo "waiting complete. moving to success"
          onSuccess:
            - echo "we made it to success"
          onFailure:
            - echo "darn, we failed"
          onComplete:
            - echo "doing some cleanup in the onComplete section"
      - name: host_timeout_step_sigterm
        type: PowerShell
        configuration:
          timeoutSeconds: 5
          inputResources:
            - name: dummy
        execution:
          onStart:
            - echo "Setting everything up"
          onExecute:
            - echo "lets loop for a bit"
            - |
                $i = 0
                while ($i -lt 1000) {
                  echo "total wait time: $i seconds";
                  start-sleep 1
                  $i += 1
                }
            - echo "waiting complete. moving to success"
          onSuccess:
            - echo "we made it to success"
          onFailure:
            - echo "darn, we failed"
          onComplete:
            - echo "doing some cleanup in the onComplete section"

      - name: host_failure_step_sigterm
        type: PowerShell
        configuration:
          timeoutSeconds: 5
          inputResources:
            - name: dummy
        execution:
          onStart:
            - echo "Setting everything up"
          onExecute:
            - echo "lets loop for a bit"
            - |
                $i = 0
                while ($i -lt 1000) {
                  echo "total wait time: $i seconds";
                  start-sleep 1
                  $i += 1
                }
            - echo "waiting complete. moving to success"
          onSuccess:
            - echo "we made it to success"
          onFailure:
            - echo "darn, we failed"
            - |
                $i = 0
                while ($i -lt 1000) {
                  echo "total wait time: $i seconds";
                  start-sleep 1
                  $i += 1
                }
          onComplete:
            - echo "doing some cleanup in the onComplete section"

      - name: host_complete_step_sigterm
        type: PowerShell
        configuration:
          timeoutSeconds: 5
          inputResources:
            - name: dummy
        execution:
          onStart:
            - echo "Setting everything up"
          onExecute:
            - echo "lets loop for a bit"
            - |
                $i = 0
                while ($i -lt 1000) {
                  echo "total wait time: $i seconds";
                  start-sleep 1
                  $i += 1
                }
            - echo "waiting complete. moving to success"
          onSuccess:
            - echo "we made it to success"
          onComplete:
            - echo "cleanup time in onComplete"
            - |
                $i = 0
                while ($i -lt 1000) {
                  echo "total wait time: $i seconds";
                  start-sleep 1
                  $i += 1
                }
          onFailure:
            - echo "doing some cleanup in the onFailure section"
