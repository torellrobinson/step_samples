resources:
  - name: S_PS_CreateReleaseBundle_6237_008_BuildInfo_1
    type: BuildInfo
    configuration:
      sourceArtifactory: art
      buildName: 'name'
      buildNumber: '1'

  - name: S_PS_CreateReleaseBundle_6237_008_BuildInfo_2
    type: BuildInfo
    configuration:
      sourceArtifactory: art
      buildName: 'name'
      buildNumber: '1'

  - name: S_PS_CreateReleaseBundle_6237_008_ReleaseBundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: dist
      name: name
      version: '1'

pipelines:
  - name: pipeline_S_PS_CreateReleaseBundle_6237_008
    configuration:
      nodePool: win_2019
    steps:
      - name: S_PS_CreateReleaseBundle_6237_008_1
        type: PowerShell
        configuration:
          integrations:
            - name: art
          outputResources:
            - name: S_PS_CreateReleaseBundle_6237_008_BuildInfo_1
        execution:
          onExecute:
            - |
                $JFROG_CLI_BUILD_NUMBER = ${run_id}
                $JFROG_CLI_BUILD_NAME = "S_PS_CreateReleaseBundle_6237_008_1"
                Set-Content -Path S_PS_CreateReleaseBundle_6237_008_1.txt -Value ${run_id}
                jfrog rt upload S_PS_CreateReleaseBundle_6237_008_1.txt test-automation-generic-local --insecure-tls=$no_verify_ssl
                jfrog rt build-publish --insecure-tls=${no_verify_ssl} ${JFROG_CLI_BUILD_NAME} ${JFROG_CLI_BUILD_NUMBER}
                write_output S_PS_CreateReleaseBundle_6237_008_BuildInfo_1 buildName="${JFROG_CLI_BUILD_NAME}" buildNumber="${JFROG_CLI_BUILD_NUMBER}"

      - name: S_PS_CreateReleaseBundle_6237_008_2
        type: PowerShell
        configuration:
          integrations:
            - name: art
          inputSteps:
            - name: S_PS_CreateReleaseBundle_6237_008_1
          outputResources:
            - name: S_PS_CreateReleaseBundle_6237_008_BuildInfo_2
        execution:
          onExecute:
            - |
                $JFROG_CLI_BUILD_NUMBER = ${run_id}
                $JFROG_CLI_BUILD_NAME = "S_PS_CreateReleaseBundle_6237_008_2"
                Set-Content -Path S_PS_CreateReleaseBundle_6237_008_2.txt -Value ${run_id}
                jfrog rt upload S_PS_CreateReleaseBundle_6237_008_2.txt test-automation-generic-local --insecure-tls=$no_verify_ssl
                jfrog rt build-publish --insecure-tls=${no_verify_ssl} ${JFROG_CLI_BUILD_NAME} ${JFROG_CLI_BUILD_NUMBER}
                write_output S_PS_CreateReleaseBundle_6237_008_BuildInfo_2 buildName="${JFROG_CLI_BUILD_NAME}" buildNumber="${JFROG_CLI_BUILD_NUMBER}"

      - name: S_PS_CreateReleaseBundle_6237_008_3
        type: CreateReleaseBundle
        configuration:
          releaseBundleName: ${JFROG_CLI_BUILD_NAME}
          releaseBundleVersion: ${run_id}
          dryRun: false
          inputResources:
            - name: S_PS_CreateReleaseBundle_6237_008_BuildInfo_1
            - name: S_PS_CreateReleaseBundle_6237_008_BuildInfo_2
          outputResources:
            - name: S_PS_CreateReleaseBundle_6237_008_ReleaseBundle

      - name: S_PS_CreateReleaseBundle_6237_008_4
        type: PowerShell
        configuration:
          inputResources:
            - name: S_PS_CreateReleaseBundle_6237_008_ReleaseBundle
          integrations:
            - name: art
            - name: dist
        execution:
          onExecute:
            - |
                $releaseBundleName = find_resource_variable S_PS_CreateReleaseBundle_6237_008_ReleaseBundle name
                $releaseBundleVersion = find_resource_variable S_PS_CreateReleaseBundle_6237_008_ReleaseBundle version
                $distributionUrl = $res_S_PS_CreateReleaseBundle_6237_008_ReleaseBundle_sourceDistribution_url
                $encoded_auth = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("${res_S_PS_CreateReleaseBundle_6237_008_ReleaseBundle_sourceDistribution_user}:${res_S_PS_CreateReleaseBundle_6237_008_ReleaseBundle_sourceDistribution_apikey}"))
                check_no_verify_ssl
                $headers = @{'Authorization' = "Basic $encoded_auth";'Content-Type' = "application/json"}
                $releaseBundle = Invoke-RestMethod "${distributionUrl}/api/v1/release_bundle/${releaseBundleName}/${releaseBundleVersion}" -Method Get -Headers $headers -TimeoutSec 60 -ContentType 'application/json' -UseBasicParsing
                Write-Output "Deleting release bundle..."
                jfrog config add distribution --overwrite --insecure-tls=$no_verify_ssl --dist-url $int_dist_url --user $int_dist_user --apikey $int_dist_apikey --interactive=false
                jfrog config use distribution
                jfrog rt release-bundle-delete --delete-from-dist=true --insecure-tls=$no_verify_ssl $releaseBundleName $releaseBundleVersion
                jfrog config remove distribution
                Write-Output "Checking resources..."
                if ( $releaseBundle.artifacts.length -ne "2" ) { throw "Wrong number of artifacts" }
                Write-Output $releaseBundle.artifacts
                $artifactOne = $releaseBundle.artifacts | Where {$_.sourceRepoPath -eq "test-automation-generic-local/S_PS_CreateReleaseBundle_6237_008_1.txt"}
                $artifactTwo = $releaseBundle.artifacts | Where {$_.sourceRepoPath -eq "test-automation-generic-local/S_PS_CreateReleaseBundle_6237_008_2.txt"}
                if ( $artifactOne.sourceRepoPath -ne "test-automation-generic-local/S_PS_CreateReleaseBundle_6237_008_1.txt" ) { throw "Wrong artifact" }
                if ( $artifactTwo.sourceRepoPath -ne "test-automation-generic-local/S_PS_CreateReleaseBundle_6237_008_2.txt" ) { throw "Wrong artifact" }
